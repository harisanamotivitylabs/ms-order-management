server.port=8082
spring.datasource.url=jdbc:mysql://localhost:3306/mloms
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.database-platform = org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.application.name= ORDER-SERVICE
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true 

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilinece4j Properties
resilience4j.circuitbreakers.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreakers.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=50s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

## Resilience4j Timeout Properties

# Resilience4J Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

## Resilience4J Retry Properties
Resilience4J.retry.instances.inventory.max-attempts=3
Resilience4J.retry.instances.inventory.wait-duration=5s

spring.zipkin.base-url=http://localhost:9411/
spring.sleuth.sampler.probability=1.0

# kafka Properties

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.order.orderservice.event.OrderPlacedEvent

